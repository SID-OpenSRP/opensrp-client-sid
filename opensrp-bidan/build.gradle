buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.3'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
        classpath 'io.fabric.tools:gradle:1.31.2'
//        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'

    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://maven.fabric.io/public' }
    mavenLocal()
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

apply plugin: 'io.fabric'

jacoco {
    toolVersion = "0.8.0"
}

// Local repo
//repositories {
//    flatDir {
//        dirs '../lib/opensrp-device/opensrp-deviceinterface/build/outputs/aar'
//    }
//}

android {

    compileSdkVersion 28

    defaultConfig {
        applicationId "org.smartregister.bidan"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 8
        versionName "8.4.7"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        ndk { abiFilters "armeabi", "armeabi-v7a", "x86" }

        buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
        buildConfigField "boolean", "TIME_CHECK", "false"
        buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
//                arguments = [eventBusIndex: "org.smartregister.bidan.TBREventBusIndex"]
            }
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "DATABASE_VERSION", '1'
            resValue "string", 'opensrp_url', '"http://149.129.219.205:9094/opensrp"'

        }
        debug {
            resValue "string", 'opensrp_url', '"http://149.129.219.205:9094/opensrp"'
            buildConfigField "int", "DATABASE_VERSION", '1'
            buildConfigField "boolean", "SYNC_WAIT", 'false'
            buildConfigField "boolean", "UNIQUE_ID", 'false'
            testCoverageEnabled true

        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
//        lintConfig file("lint.xml")
        abortOnError false
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


dependencies {
    implementation('org.smartregister:opensrp-client-core:1.4.0-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.guava', module: 'guava'
    }

    implementation('org.smartregister:opensrp-client-enketo:1.1.0-SNAPSHOT@aar') {
        transitive = true
    }

    implementation('org.smartregister:opensrp-client-configurable-views:1.1.1-SNAPSHOT@aar') {
        transitive = true
    }

    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'
    annotationProcessor 'com.jakewharton:butterknife:10.2.1'

    implementation group: 'com.google.guava', name: 'guava', version: '28.2-android'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'com.github.lecho:hellocharts-android:v1.5.8'

    implementation files('libs/FlurryAnalytics-6.0.0.jar')

    implementation 'org.osmdroid:osmdroid-android:6.0.2'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.balysv.materialmenu:material-menu:2.0.0'
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'

    androidTestImplementation 'junit:junit:4.13.1'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation('com.squareup:fest-android:1.0.8') { exclude module: 'support-v4' }
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.robolectric:shadows-multidex:3.8'

    def appCenterSdkVersion = '4.1.0'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    // PowerMock
    def powerMockVersion = '1.7.3'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"

    androidTestImplementation('com.android.support.test:runner:1.0.2') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test:rules:1.0.2') {
        exclude module: 'support-annotations'
    }

}
